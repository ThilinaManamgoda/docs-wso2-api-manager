---
title: WSO2 API Manager for VMware Tanzu (Beta)
owner: Partners
---

<strong><%= modified_date %></strong>

<p class="note warning">
<strong>Warning: </strong>
The WSO2 API Manager for VMware Tanzu tile is currently in beta and is intended for evaluation
and test purposes only. Do not use this product in a VMware Tanzu production environment.
</p>

This documentation describes WSO2 API Manager for Pivotal Cloud
Foundry (VMware Tanzu), which installs the API management service,
[WSO2 API Manager 2.6.0](https://wso2.com/api-management/), on VMware Tanzu.

## <a id='overview'></a>Overview

WSO2 API Manager for VMware Tanzu is a unique, open approach to full lifecycle API development, integration, and
management. It allows extensibility and customization, while ensuring freedom from lock-in. As part of
the larger WSO2 Integration Agile Platform, it is a central component used to deploy and manage
API-driven ecosystems. Its hybrid integration capabilities further simplify projects that span
traditional and micro-service environments.

The Deployment Architecture for the API Manager is as follows:

![Deployment](images/deployment.png)

## <a id='key-components'></a>Key Components

The key components of WSO2 API Manager for VMware Tanzu are described in this section.

### API Publisher

API development is generally done by someone who understands the technical aspects of the API, such as the interfaces, documentation, and versions.
API management is generally done by someone who understands the business aspects of the APIs.

In most business environments, API development is a responsibility that is distinct from API publication and management.
WSO2 API Manager for VMware Tanzu provides a web interface called WSO2 API Publisher for API development and management.
It is a structured UI designed for API creators to develop, document, scale, and version APIs,
while also facilitating more API management-related tasks such as publishing an API, monetizating it, analyzing statistics, and promoting.

### API Store

The API Store web application provides a collaborative interface for API publishers to host and advertise their APIs while also allowing for API consumers to [self register](https://docs.wso2.com/display/AM260/Customizing+the+API+Store), discover, evaluate, subscribe to and use, secure, protected, and authenticated APIs.

### API Gateway

A runtime backend component ([API proxy](https://docs.wso2.com/display/EI611/Working+with+APIs)) developed using [WSO2 ESB](https://docs.wso2.com/display/EI611/WSO2+Enterprise+Integrator+Documentation). API Gateway secures, protects, manages, and scales API calls. It intercepts API requests, applies policies such as throttling and security using handlers, and manages API statistics.
Upon validation of a policy, the Gateway passes web service calls to the backend exposed through the API Manager.
If the service call is a token request, the Gateway passes it directly to the Key Manager.
This component is horizontally scalable.
It is possible to scale up to 20 Gateway nodes.

### Key Manager

Manages all clients, security, and access token-related operations. The Gateway connects with the Key Manager to check the validity of [OAuth](https://tools.ietf.org/html/rfc6749) tokens, subscriptions and API invocations. When a subscriber creates an application and generates an access token to the application using the API Store, the Store makes a call to the API Gateway, which in turn connects with the Key Manager to create an OAuth client and obtain an access token. Similarly, to validate a token, the API Gateway calls the Key Manager, which fetches and validates the token details from the database.
This component is horizontally scalable.

For more information, see [Key Manager](https://docs.wso2.com/display/AM260/Key+Concepts#KeyConcepts-KeyManager).
### Traffic Manager

The Traffic Manager helps users to regulate API traffic, make APIs and applications available to consumers at different service levels, and secure APIs against security attacks. The Traffic Manager features a dynamic throttling engine to process throttling policies in real-time<%# Stuff happens in "real time". %>, including rate limiting of API requests.
Traffic Managers do not scale horizontally.

For more information, see [Working with Throttling](https://docs.wso2.com/display/AM260/Working+with+Throttling).

### Analytics

Additionally, monitoring and analytics are provided by the analytics component, WSO2 API Manager Analytics. This component provides a host of statistical graphs, an alerting mechanism on pre-determined events, and a log analyzer.

For more information, see [Analytics](https://docs.wso2.com/display/AM260/Working+with+Analytics).

## <a id='features'></a>Key Features

WSO2 API Manager for VMware Tanzu includes the following key features:

* Design and Prototype APIs
* Publish APIs and Govern API use
* Control Access and Enforce Security
* Developer Portal
* Manage the Developer Community
* Manage and Scale API Traffic
* Monitor and Monetize
* Pluggable, Extensible, and Themeable
* WSO2 Platform Multi-tenancy Support
* API Analytics



## <a id="snapshot"></a>Product Snapshot

The following table provides version and version-support information about WSO2 API Manager.

<table class="nice">
    <th>Element</th>
    <th>Details</th>
    <tr>
        <td>Tile version</td>
        <td>2.6.0-4.1592404822039</td>
    </tr>
    <tr>
        <td>Release date</td>
        <td>June 27, 2019</td>
    </tr>
    <tr>
        <td>Software component version</td>
        <td>2.6.0</td>
    </tr>
    <tr>
        <td>Compatible Ops Manager version(s)</td>
        <td>2.5.x, 2.6.x, 2.9.x</td>
    </tr>
    <tr>
       <td>BOSH stemcell version</td>
       <td>Ubuntu Xenial 621.76</td>
    </tr>
    <tr>
        <td>IaaS support</td>
        <td>AWS, GCP</td>
    </tr>
</table>


## <a id="reqs"></a>Requirements

WSO2 API Manager has the following requirements:

* SQL Database databases (MySQL or MS SQL) for storing data.
    * Database for storing user management
        * For MySQL(versions before v5.7) use [script](https://github.com/wso2/pivotal-cf-apim/blob/2.6.x/pattern-2/bosh-release/dbscripts/um-mysql.sql)
        * For MySQL(v5.7 later version) use [script](https://github.com/wso2/pivotal-cf-apim/blob/2.6.x/pattern-2/bosh-release/dbscripts/um-mysql5.7.sql)
        * For MSSQL use [script](https://github.com/wso2/pivotal-cf-apim/blob/2.6.x/pattern-2/bosh-release/dbscripts/um-mssql.sql)
    * Database for storing registry data
        * For MySQL(versions before v5.7) use [script](https://github.com/wso2/pivotal-cf-apim/blob/2.6.x/pattern-2/bosh-release/dbscripts/reg-mysql.sql)
        * For MySQL(v5.7 or later version) use [script](https://github.com/wso2/pivotal-cf-apim/blob/2.6.x/pattern-2/bosh-release/dbscripts/reg-mysql5.7.sql)
        * For MSSQL use [script](https://github.com/wso2/pivotal-cf-apim/blob/2.6.x/pattern-2/bosh-release/dbscripts/reg-mssql.sql)
    * Database for API Manager specific data
        * For MySQL(versions before v5.7) use [script](https://github.com/wso2/pivotal-cf-apim/blob/2.6.x/pattern-2/bosh-release/dbscripts/apim-mysql.sql)
        * For MySQL(v5.7 or later version) use [script](https://github.com/wso2/pivotal-cf-apim/blob/2.6.x/pattern-2/bosh-release/dbscripts/apim-mysql5.7.sql)
        * For MSSQL use [script](https://github.com/wso2/pivotal-cf-apim/blob/2.6.x/pattern-2/bosh-release/dbscripts/apim-mssql.sql)
    * Database for storing analytics data
    * Database for API Manager Analytics clustering
    * Database for API Manager Analytics persistence

Use "latin1" as the character set for the database.
You can use the following command to create the database.

`mysql> create database <DATABASE_NAME> character set latin1;`

For more information, see [Installing and Configuring the Databases](https://docs.wso2.com/display/AM260/Installing+and+Configuring+the+Databases)
in the WSO2 documentation.


## <a id="feedback"></a>Feedback

If you have a feature request, questions, or information about an issue email
[WSO2](mailto:dev@wso2.org).

## <a id='license'></a>License

This tile contains the WSO2 products with its latest updates, which are under the End User License Agreement (EULA) 2.1.
Read more about [EULA 2.1](https://wso2.com/licenses/wso2-update/2.1).

You need a valid license key that corresponds to your WSO2 Subscription to install this tile. If you do not possess a valid license key,
contact a [WSO2 account manager](https://wso2.com/contact/).
